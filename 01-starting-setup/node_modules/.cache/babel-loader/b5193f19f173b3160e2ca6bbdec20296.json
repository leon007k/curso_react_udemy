{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\curso_react_udemy\\\\01-starting-setup\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseForm() {\n  _s();\n\n  /**\r\n   * # REACT HOOKS\r\n   * * para este caso usamos los estados para guardar el valor que ha ingresado el usuario,\r\n   * * y poder enviarlo posteriormente\r\n   */\n  // ! Forma 1, de manejar varios estados \n\n  /* const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredNumber, setEnteredNumber] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n    const titleChangeHandler = (evt) => { setEnteredTitle(evt.target.value); }\r\n    const numberChangeHandler = (evt) => { setEnteredNumber(evt.target.value); }\r\n    const dateChangeHandler = (evt) => { setEnteredDate(evt.target.target); } */\n  // ! Forma 2 de manejar varios estados. Estos se manejan como un objeto\n  const [userInput, setUserInput] = useState({\n    enteredTitle: '',\n    enteredNumber: '',\n    enteredDate: ''\n  });\n\n  const titleChangeHandler = evt => {\n    setUserInput({ ...userInput,\n      enteredTitle: evt.target.value\n    });\n  };\n\n  const numberChangeHandler = evt => {\n    setUserInput({ ...userInput,\n      enteredNumber: evt.target.value\n    });\n  };\n\n  const dateChangeHandler = evt => {\n    setUserInput({ ...userInput,\n      enteredDate: evt.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense_control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Titulo \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense_control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Cantidad \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: numberChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense_control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Fecha \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2022-01-01\",\n          max: \"2025-12-30\",\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Agregar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpenseForm, \"6Q7EmJCkXX3L1JHEfaVWxqToL+o=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","ExpenseForm","userInput","setUserInput","enteredTitle","enteredNumber","enteredDate","titleChangeHandler","evt","target","value","numberChangeHandler","dateChangeHandler"],"sources":["C:/wamp64/www/curso_react_udemy/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nfunction ExpenseForm() {\r\n  /**\r\n   * # REACT HOOKS\r\n   * * para este caso usamos los estados para guardar el valor que ha ingresado el usuario,\r\n   * * y poder enviarlo posteriormente\r\n   */\r\n  // ! Forma 1, de manejar varios estados \r\n  /* const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredNumber, setEnteredNumber] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n\r\n  const titleChangeHandler = (evt) => { setEnteredTitle(evt.target.value); }\r\n\r\n  const numberChangeHandler = (evt) => { setEnteredNumber(evt.target.value); }\r\n\r\n  const dateChangeHandler = (evt) => { setEnteredDate(evt.target.target); } */\r\n\r\n  // ! Forma 2 de manejar varios estados. Estos se manejan como un objeto\r\n  const [userInput, setUserInput] = useState({\r\n    enteredTitle: '',\r\n    enteredNumber: '',\r\n    enteredDate: ''\r\n  }\r\n  );\r\n\r\n  const titleChangeHandler = (evt) => {\r\n    setUserInput({\r\n      ...userInput,\r\n      enteredTitle: evt.target.value\r\n    });\r\n  }\r\n\r\n  const numberChangeHandler = (evt) => {\r\n    setUserInput({\r\n      ...userInput,\r\n      enteredNumber: evt.target.value\r\n    });\r\n  }\r\n\r\n  const dateChangeHandler = (evt) => {\r\n    setUserInput({\r\n      ...userInput,\r\n      enteredDate: evt.target.value\r\n    });\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense_control\">\r\n          <label>Titulo </label>\r\n          <input type=\"text\" onChange={titleChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense_control\">\r\n          <label>Cantidad </label>\r\n          <input type=\"number\" min=\"0.01\" step=\"0.01\" onChange={numberChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense_control\">\r\n          <label>Fecha </label>\r\n          <input type=\"date\" min=\"2022-01-01\" max=\"2025-12-30\" onChange={dateChangeHandler} />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"submit\">Agregar</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,mBAAP;;;AAEA,SAASC,WAAT,GAAuB;EAAA;;EACrB;AACF;AACA;AACA;AACA;EACE;;EACA;AACF;AACA;AACA;AACA;AACA;EAKE;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC;IACzCI,YAAY,EAAE,EAD2B;IAEzCC,aAAa,EAAE,EAF0B;IAGzCC,WAAW,EAAE;EAH4B,CAAD,CAA1C;;EAOA,MAAMC,kBAAkB,GAAIC,GAAD,IAAS;IAClCL,YAAY,CAAC,EACX,GAAGD,SADQ;MAEXE,YAAY,EAAEI,GAAG,CAACC,MAAJ,CAAWC;IAFd,CAAD,CAAZ;EAID,CALD;;EAOA,MAAMC,mBAAmB,GAAIH,GAAD,IAAS;IACnCL,YAAY,CAAC,EACX,GAAGD,SADQ;MAEXG,aAAa,EAAEG,GAAG,CAACC,MAAJ,CAAWC;IAFf,CAAD,CAAZ;EAID,CALD;;EAOA,MAAME,iBAAiB,GAAIJ,GAAD,IAAS;IACjCL,YAAY,CAAC,EACX,GAAGD,SADQ;MAEXI,WAAW,EAAEE,GAAG,CAACC,MAAJ,CAAWC;IAFb,CAAD,CAAZ;EAID,CALD;;EAOA,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,uBAAf;MAAA,wBACE;QAAK,SAAS,EAAC,qBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,MAAZ;UAAmB,QAAQ,EAAEH;QAA7B;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAKE;QAAK,SAAS,EAAC,qBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,QAAZ;UAAqB,GAAG,EAAC,MAAzB;UAAgC,IAAI,EAAC,MAArC;UAA4C,QAAQ,EAAEI;QAAtD;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,eASE;QAAK,SAAS,EAAC,qBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,MAAZ;UAAmB,GAAG,EAAC,YAAvB;UAAoC,GAAG,EAAC,YAAxC;UAAqD,QAAQ,EAAEC;QAA/D;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAeE;MAAK,SAAS,EAAC,sBAAf;MAAA,uBACE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAfF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD;;GAnEQX,W;;KAAAA,W;AAqET,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}