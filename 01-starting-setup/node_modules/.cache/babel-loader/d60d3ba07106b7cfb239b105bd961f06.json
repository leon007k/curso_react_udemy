{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\curso_react_udemy\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\ExpenseItem.js\",\n    _s = $RefreshSig$();\n\n/*\r\n# REACT HOOKS\r\n* esto permitira poder hacer uso de los estados, permitiendo que esta funcion se ejecute de nuevo,\r\n*para mostrar los cambios que se generan con un evento */\nimport React, { useState } from 'react';\n/**\r\n * # Al crear el archivo de css, lo debemos mandar a llamar dentro de nuestro js del componente\r\n * # para ingresar las clases se declaran como className\r\n * # los props, seran los parametros que recibira la funcion de nuestro componente. Estos han sido mandados desde la funcion app\r\n */\n\nimport './ExpenseItem.css';\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../IU/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseItem(props) {\n  _s();\n\n  /*\r\n  # REACT HOOKS\r\n  * useState,nos permitira volver a ejecutar esta funcion, cambiando el valor(estado).\r\n  * Se le pasa como parametro el valor(estado) a cambiar.\r\n  * Este nos devuelve dos valores, SIEMPRE. Uno es el primer valor de la variable y el otro es una funcion que permite\r\n  * cambiar dos cosas, cambiar el valor(estado) de la varible y ejecutar la funcion de nuevo. Retorna un array\r\n  */\n  const [title, setTitle] = useState(props.title);\n\n  const clickHandler = () => {\n    /*\r\n    # REACT HOOKS\r\n    * Dentro de nuestra funcion o evento que vallamos a ejecutar para cambiar el valor, mandamos a llamar a la funcion\r\n    * que permite cambiar el valor(estado) de la variable y a su vez ejecutar de nuevo la funcion de este componente\r\n    */\n    setTitle('Updated!!!');\n    console.log(title);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n      date: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__price\",\n        children: [\"$\", props.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clickHandler,\n        children: \"Agregar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpenseItem, \"ceUz0wjPP/oTY3+evv2xH5hljW4=\");\n\n_c = ExpenseItem;\nexport default ExpenseItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"names":["React","useState","ExpenseDate","Card","ExpenseItem","props","title","setTitle","clickHandler","console","log","date","amount"],"sources":["C:/wamp64/www/curso_react_udemy/01-starting-setup/src/components/Expenses/ExpenseItem.js"],"sourcesContent":["/*\r\n# REACT HOOKS\r\n* esto permitira poder hacer uso de los estados, permitiendo que esta funcion se ejecute de nuevo,\r\n*para mostrar los cambios que se generan con un evento */\r\nimport React, { useState } from 'react';\r\n\r\n/**\r\n * # Al crear el archivo de css, lo debemos mandar a llamar dentro de nuestro js del componente\r\n * # para ingresar las clases se declaran como className\r\n * # los props, seran los parametros que recibira la funcion de nuestro componente. Estos han sido mandados desde la funcion app\r\n */\r\nimport './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../IU/Card';\r\n\r\nfunction ExpenseItem(props) {\r\n\r\n  /*\r\n  # REACT HOOKS\r\n  * useState,nos permitira volver a ejecutar esta funcion, cambiando el valor(estado).\r\n  * Se le pasa como parametro el valor(estado) a cambiar.\r\n  * Este nos devuelve dos valores, SIEMPRE. Uno es el primer valor de la variable y el otro es una funcion que permite\r\n  * cambiar dos cosas, cambiar el valor(estado) de la varible y ejecutar la funcion de nuevo. Retorna un array\r\n  */\r\n  const [title, setTitle] = useState(props.title);\r\n\r\n  const clickHandler = () => {\r\n    /*\r\n    # REACT HOOKS\r\n    * Dentro de nuestra funcion o evento que vallamos a ejecutar para cambiar el valor, mandamos a llamar a la funcion\r\n    * que permite cambiar el valor(estado) de la variable y a su vez ejecutar de nuevo la funcion de este componente\r\n    */\r\n    setTitle('Updated!!!');\r\n    console.log(title);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n        <button onClick={clickHandler}>Agregar</button>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,mBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;EAAA;;EAE1B;AACF;AACA;AACA;AACA;AACA;AACA;EACE,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACI,KAAK,CAACC,KAAP,CAAlC;;EAEA,MAAME,YAAY,GAAG,MAAM;IACzB;AACJ;AACA;AACA;AACA;IACID,QAAQ,CAAC,YAAD,CAAR;IACAE,OAAO,CAACC,GAAR,CAAYJ,KAAZ;EACD,CARD;;EAUA,oBACE,QAAC,IAAD;IAAM,SAAS,EAAC,cAAhB;IAAA,wBACE,QAAC,WAAD;MAAa,IAAI,EAAED,KAAK,CAACM;IAAzB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,2BAAf;MAAA,wBACE;QAAA,UAAKL;MAAL;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC,qBAAf;QAAA,gBAAuCD,KAAK,CAACO,MAA7C;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAQ,OAAO,EAAEJ,YAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GA/BQJ,W;;KAAAA,W;AAiCT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}