{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\curso_react_udemy\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from '../IU/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport ExpensesList from './ExpensesList';\nimport ExpensesChart from './ExpensesChart';\nimport './Expense.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState('all'); // * actualizamos el año seleccionado\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  }; // * Filtramos la lista de gasto por año\n\n\n  const filteredExpenses = props.data.filter(expense => {\n    // * si el usuario elije la primera opcion \"Elije un año\", se mostraran todos los gastos registrados\n    if (filteredYear === 'all') {\n      return expense.date.getFullYear() >= Math.min(expense.date.getFullYear());\n    } else {\n      return expense.date.getFullYear().toString() === filteredYear;\n    }\n  });\n  /**\r\n   * * Para que React pueda identificar cada uno de los elementos del array, y agregarlos correctamente\r\n   * * se requiere obtener un key, para cada uno de ellos, esto evitaria tener bugs, ya que por ejem. si un elemento\r\n   * * tiene alguna funcion en especifico, y al agregar otro mediante un arreglo, este perderia su funcion y la tomaria otro.\r\n   */\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: filteredYear,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesChart, {\n      expenses: filteredExpenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesList, {\n      data: filteredExpenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expenses, \"yAvStgLVAYQhnspdSWuWf0cUJoA=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","Card","ExpensesFilter","ExpensesList","ExpensesChart","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","data","filter","expense","date","getFullYear","Math","min","toString"],"sources":["C:/wamp64/www/curso_react_udemy/01-starting-setup/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Card from '../IU/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport './Expense.css';\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState('all');\r\n\r\n  // * actualizamos el año seleccionado\r\n  const filterChangeHandler = selectedYear => {\r\n    setFilteredYear(selectedYear);\r\n  }\r\n\r\n  // * Filtramos la lista de gasto por año\r\n  const filteredExpenses = props.data.filter(expense => {\r\n    // * si el usuario elije la primera opcion \"Elije un año\", se mostraran todos los gastos registrados\r\n    if (filteredYear === 'all') {\r\n      return expense.date.getFullYear() >= Math.min(expense.date.getFullYear());\r\n    } else {\r\n      return expense.date.getFullYear().toString() === filteredYear;\r\n    }\r\n  });\r\n\r\n  /**\r\n   * * Para que React pueda identificar cada uno de los elementos del array, y agregarlos correctamente\r\n   * * se requiere obtener un key, para cada uno de ellos, esto evitaria tener bugs, ya que por ejem. si un elemento\r\n   * * tiene alguna funcion en especifico, y al agregar otro mediante un arreglo, este perderia su funcion y la tomaria otro.\r\n   */\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\r\n      <ExpensesChart expenses={filteredExpenses} />\r\n      <ExpensesList data={filteredExpenses} />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,eAAP;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EACvB,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,KAAD,CAAhD,CADuB,CAGvB;;EACA,MAAMS,mBAAmB,GAAGC,YAAY,IAAI;IAC1CF,eAAe,CAACE,YAAD,CAAf;EACD,CAFD,CAJuB,CAQvB;;;EACA,MAAMC,gBAAgB,GAAGL,KAAK,CAACM,IAAN,CAAWC,MAAX,CAAkBC,OAAO,IAAI;IACpD;IACA,IAAIP,YAAY,KAAK,KAArB,EAA4B;MAC1B,OAAOO,OAAO,CAACC,IAAR,CAAaC,WAAb,MAA8BC,IAAI,CAACC,GAAL,CAASJ,OAAO,CAACC,IAAR,CAAaC,WAAb,EAAT,CAArC;IACD,CAFD,MAEO;MACL,OAAOF,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BG,QAA3B,OAA0CZ,YAAjD;IACD;EACF,CAPwB,CAAzB;EASA;AACF;AACA;AACA;AACA;;EAEE,oBACE,QAAC,IAAD;IAAM,SAAS,EAAC,UAAhB;IAAA,wBACE,QAAC,cAAD;MAAgB,QAAQ,EAAEA,YAA1B;MAAwC,cAAc,EAAEE;IAAxD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,aAAD;MAAe,QAAQ,EAAEE;IAAzB;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,YAAD;MAAc,IAAI,EAAEA;IAApB;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GA/BQN,Q;;KAAAA,Q;AAiCT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}