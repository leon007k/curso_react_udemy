{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\curso_react_udemy\\\\05-usereducer-starting-project\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n/*\r\n * El contexto proporciona una forma de compartir valores como estos entre los componentes \r\n * sin tener que pasar explícitamente un apoyo a través de cada nivel del árbol\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    setIsLoggedIn(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","AuthContext","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","props","setIsLoggedIn","logoutHandler","loginHandler","children"],"sources":["C:/wamp64/www/curso_react_udemy/05-usereducer-starting-project/src/store/auth-context.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n/*\r\n * El contexto proporciona una forma de compartir valores como estos entre los componentes \r\n * sin tener que pasar explícitamente un apoyo a través de cada nivel del árbol\r\n */\r\n\r\nconst AuthContext = React.createContext({\r\n  isLoggedIn: false,\r\n  onLogout: () => { },\r\n  onLogin: (email, password) => { }\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const logoutHandler = () => {\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  const loginHandler = () => {\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: isLoggedIn,\r\n        onLogout: logoutHandler,\r\n        onLogin: loginHandler\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  )\r\n};\r\n\r\nexport default AuthContext;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA;AACA;AACA;AACA;;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;EACtCC,UAAU,EAAE,KAD0B;EAEtCC,QAAQ,EAAE,MAAM,CAAG,CAFmB;EAGtCC,OAAO,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB,CAAG;AAHK,CAApB,CAApB;AAMA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;EAAA;;EAE5C,MAAM,CAACN,UAAD,EAAaO,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;;EAEA,MAAMW,aAAa,GAAG,MAAM;IAC1BD,aAAa,CAAC,KAAD,CAAb;EACD,CAFD;;EAIA,MAAME,YAAY,GAAG,MAAM;IACzBF,aAAa,CAAC,IAAD,CAAb;EACD,CAFD;;EAIA,oBACE,QAAC,WAAD,CAAa,QAAb;IACE,KAAK,EAAE;MACLP,UAAU,EAAEA,UADP;MAELC,QAAQ,EAAEO,aAFL;MAGLN,OAAO,EAAEO;IAHJ,CADT;IAAA,UAOGH,KAAK,CAACI;EAPT;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CAvBM;;GAAML,mB;;KAAAA,mB;AAyBb,eAAeP,WAAf"},"metadata":{},"sourceType":"module"}