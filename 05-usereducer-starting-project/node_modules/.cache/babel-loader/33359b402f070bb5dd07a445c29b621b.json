{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\curso_react_udemy\\\\05-usereducer-starting-project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  /*\n  * Se comento toda la logica, porque se movio al Context\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n   useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\n     if (storedUserLoggedInInformation === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n   const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n   const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n  */\n  const ctx = useContext(AuthContext); // * Utilice un Provider para pasar el tema context al árbol de abajo\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!ctx.isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }, this), ctx.isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useContext","Login","Home","MainHeader","AuthContext","App","ctx","isLoggedIn"],"sources":["C:/wamp64/www/curso_react_udemy/05-usereducer-starting-project/src/App.js"],"sourcesContent":["import React, { useContext } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n  /*\n  * Se comento toda la logica, porque se movio al Context\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\n\n    if (storedUserLoggedInInformation === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n */\n\n\n  const ctx = useContext(AuthContext);\n  // * Utilice un Provider para pasar el tema context al árbol de abajo\n  return (\n    <>\n      <MainHeader />\n      <main>\n        {!ctx.isLoggedIn && <Login />}\n        {ctx.isLoggedIn && <Home />}\n      </main>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAOE,MAAMC,GAAG,GAAGN,UAAU,CAACI,WAAD,CAAtB,CA3Ba,CA4Bb;;EACA,oBACE;IAAA,wBACE,QAAC,UAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,WACG,CAACE,GAAG,CAACC,UAAL,iBAAmB,QAAC,KAAD;QAAA;QAAA;QAAA;MAAA,QADtB,EAEGD,GAAG,CAACC,UAAJ,iBAAkB,QAAC,IAAD;QAAA;QAAA;QAAA;MAAA,QAFrB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AASD;;GAtCQF,G;;KAAAA,G;AAwCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}