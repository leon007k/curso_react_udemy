{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\curso_react_udemy\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\ExpensesChart.js\";\nimport React from 'react';\nimport Chart from '../Chart/Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpensesChart(props) {\n  const chartData = [{\n    label: 'Ene',\n    value: 0\n  }, {\n    label: 'Feb',\n    value: 0\n  }, {\n    label: 'Mar',\n    value: 0\n  }, {\n    label: 'Abr',\n    value: 0\n  }, {\n    label: 'May',\n    value: 0\n  }, {\n    label: 'Jun',\n    value: 0\n  }, {\n    label: 'Jul',\n    value: 0\n  }, {\n    label: 'Ago',\n    value: 0\n  }, {\n    label: 'Sep',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dic',\n    value: 0\n  }]; // * Se recorren los valores recibidos, para obtener los gastos por mes, y asignarlos al chartData\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); // * empieza en 0 => enero = 0\n\n    chartData[expenseMonth].value += expense.amount;\n  }\n\n  console.log(chartData);\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    data: chartData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n}\n\n_c = ExpensesChart;\nexport default ExpensesChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["React","Chart","ExpensesChart","props","chartData","label","value","expense","expenses","expenseMonth","date","getMonth","amount","console","log"],"sources":["C:/wamp64/www/curso_react_udemy/01-starting-setup/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nfunction ExpensesChart(props) {\r\n\r\n  const chartData = [\r\n    { label: 'Ene', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Abr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Ago', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dic', value: 0 },\r\n  ];\r\n\r\n  // * Se recorren los valores recibidos, para obtener los gastos por mes, y asignarlos al chartData\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // * empieza en 0 => enero = 0\r\n    chartData[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  console.log(chartData);\r\n  return <Chart data={chartData} />;\r\n}\r\n\r\nexport default ExpensesChart;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAE5B,MAAMC,SAAS,GAAG,CAChB;IAAEC,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CADgB,EAEhB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAFgB,EAGhB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAHgB,EAIhB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAJgB,EAKhB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CALgB,EAMhB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CANgB,EAOhB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAPgB,EAQhB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CARgB,EAShB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CATgB,EAUhB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAVgB,EAWhB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAXgB,EAYhB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAZgB,CAAlB,CAF4B,CAiB5B;;EACA,KAAK,MAAMC,OAAX,IAAsBJ,KAAK,CAACK,QAA5B,EAAsC;IACpC,MAAMC,YAAY,GAAGF,OAAO,CAACG,IAAR,CAAaC,QAAb,EAArB,CADoC,CACU;;IAC9CP,SAAS,CAACK,YAAD,CAAT,CAAwBH,KAAxB,IAAiCC,OAAO,CAACK,MAAzC;EACD;;EAEDC,OAAO,CAACC,GAAR,CAAYV,SAAZ;EACA,oBAAO,QAAC,KAAD;IAAO,IAAI,EAAEA;EAAb;IAAA;IAAA;IAAA;EAAA,QAAP;AACD;;KAzBQF,a;AA2BT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}