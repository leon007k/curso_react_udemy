{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\curso_react_udemy\\\\05-usereducer-starting-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext, useRef } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport Inputs from '../UI/Inputs/Inputs'; // * funcion para validar el correo ingresado\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  switch (action.type) {\n    case 'USER_INPUT':\n      {\n        return {\n          value: action.val,\n          isValid: action.val.includes('@')\n        };\n      }\n\n    case 'INPUT_BLUR':\n      {\n        return {\n          value: state.value,\n          isValid: state.value.includes('@')\n        };\n      }\n\n    default:\n      {\n        return {\n          value: '',\n          isValid: false\n        };\n      }\n  }\n};\n\nconst passwordReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_PASSWORD':\n      {\n        return {\n          value: action.val,\n          isvalid: action.val.trim().length > 6\n        };\n      }\n\n    case 'INPUT_BLUR':\n      {\n        return {\n          value: state.value,\n          isValid: state.value.trim().length > 6\n        };\n      }\n\n    default:\n      {\n        return {\n          value: '',\n          isValid: false\n        };\n      }\n  }\n};\n\nconst Login = () => {\n  _s();\n\n  /*  const [enteredEmail, setEnteredEmail] = useState('');\n   const [emailIsValid, setEmailIsValid] = useState(); */\n\n  /* const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState(); */\n  const authctx = useContext(AuthContext);\n  ;\n  const [formIsValid, setFormIsValid] = useState(false);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef(); // * manejo de los datos ingresado por useReducer\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  }); // * Obtenemos los valores del objeto solo cuando isValid cambia\n\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('se creo el efecto secundario');\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 50);\n    /*\n    * Esta seccion nos permite que no se realizen varias peticiones cada vez que el usuario teecle algo\n    * permitiendo reiniciar el temporizador y ejecutarlo solo hasta que haya pasado determinado tiempo\n    */\n\n    return () => {\n      console.log('Se ha borrado el efecto secundario');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]); // * obtenemos los datos del usuario\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    /*  setFormIsValid(\n       event.target.value.includes('@') && passwordState.isValid\n     ); */\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'ADD_PASSWORD',\n      val: event.target.value\n    });\n    /* setFormIsValid(\n      emailState.isValid && event.target.value.trim().length > 6\n    ); */\n  }; // * Si no ingreso un campo o es incorrecto lo pintara de rojo\n\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault(); // * Esta seccion permite que en caso de que se de clic al btn iniciar sesion, enfoque el input que este vacio\n    // eslint-disable-next-line default-case\n\n    switch (true) {\n      case formIsValid:\n        authctx.onLogin(emailState.value, passwordState.value);\n        break;\n\n      case !emailIsValid:\n        emailInputRef.current.focus();\n        break;\n\n      case !passwordIsValid:\n        passwordInputRef.current.focus();\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Inputs, {\n        ref: emailInputRef,\n        isValid: emailState.isValid,\n        label: \"E-Mail\",\n        type: \"email\",\n        id: \"email\",\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n        ref: passwordInputRef,\n        isValid: passwordState.isValid,\n        label: \"Password\",\n        type: \"password\",\n        id: \"password\",\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"HHhiwGAy4TbQkBtQXfq0i5hCiZM=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","useRef","Card","classes","Button","AuthContext","Inputs","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","isvalid","trim","length","Login","authctx","formIsValid","setFormIsValid","emailInputRef","passwordInputRef","emailState","dispatchEmail","passwordState","dispatchPassword","emailIsValid","passwordIsValid","identifier","setTimeout","console","log","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","current","focus","login","actions","btn"],"sources":["C:/wamp64/www/curso_react_udemy/05-usereducer-starting-project/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect, useReducer, useContext, useRef } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport Inputs from '../UI/Inputs/Inputs';\n\n// * funcion para validar el correo ingresado\nconst emailReducer = (state, action) => {\n  switch (action.type) {\n    case 'USER_INPUT': {\n      return {\n        value: action.val,\n        isValid: action.val.includes('@')\n      }\n    }\n    case 'INPUT_BLUR': {\n      return {\n        value: state.value,\n        isValid: state.value.includes('@')\n      }\n    }\n    default: {\n      return {\n        value: '',\n        isValid: false\n      }\n    }\n  }\n};\n\nconst passwordReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_PASSWORD': {\n      return {\n        value: action.val,\n        isvalid: action.val.trim().length > 6\n      }\n    }\n    case 'INPUT_BLUR': {\n      return {\n        value: state.value,\n        isValid: state.value.trim().length > 6\n      }\n    }\n    default: {\n      return {\n        value: '',\n        isValid: false\n      }\n    }\n  }\n};\n\nconst Login = () => {\n  /*  const [enteredEmail, setEnteredEmail] = useState('');\n   const [emailIsValid, setEmailIsValid] = useState(); */\n  /* const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState(); */\n  const authctx = useContext(AuthContext);;\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  // * manejo de los datos ingresado por useReducer\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n\n  // * Obtenemos los valores del objeto solo cuando isValid cambia\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  useEffect(() => {\n\n    const identifier = setTimeout(() => {\n      console.log('se creo el efecto secundario');\n      setFormIsValid(\n        emailIsValid && passwordIsValid\n      );\n    }, 50);\n\n    /*\n    * Esta seccion nos permite que no se realizen varias peticiones cada vez que el usuario teecle algo\n    * permitiendo reiniciar el temporizador y ejecutarlo solo hasta que haya pasado determinado tiempo\n    */\n    return () => {\n      console.log('Se ha borrado el efecto secundario');\n      clearTimeout(identifier);\n    }\n\n  }, [emailIsValid, passwordIsValid]);\n\n  // * obtenemos los datos del usuario\n  const emailChangeHandler = (event) => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n\n    /*  setFormIsValid(\n       event.target.value.includes('@') && passwordState.isValid\n     ); */\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({\n      type: 'ADD_PASSWORD',\n      val: event.target.value\n    });\n\n    /* setFormIsValid(\n      emailState.isValid && event.target.value.trim().length > 6\n    ); */\n  };\n\n  // * Si no ingreso un campo o es incorrecto lo pintara de rojo\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    // * Esta seccion permite que en caso de que se de clic al btn iniciar sesion, enfoque el input que este vacio\n    // eslint-disable-next-line default-case\n    switch (true) {\n      case formIsValid:\n        authctx.onLogin(emailState.value, passwordState.value);\n        break;\n      case !emailIsValid:\n        emailInputRef.current.focus();\n        break;\n      case !passwordIsValid:\n        passwordInputRef.current.focus();\n        break;\n    }\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Inputs\n          ref={emailInputRef}\n          isValid={emailState.isValid}\n          label=\"E-Mail\" type=\"email\" id=\"email\"\n          value={emailState.value} onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n        />\n        <Inputs\n          ref={passwordInputRef}\n          isValid={passwordState.isValid}\n          label=\"Password\" type=\"password\" id=\"password\"\n          value={passwordState.value} onChange={passwordChangeHandler}\n          onBlur={validatePasswordHandler}\n        />\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} >\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}